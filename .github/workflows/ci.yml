name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ["3.0", "3.1", "3.2", "3.3"]
        postgres-version: ["11", "12", "13", "14", "15", "16"]
        include:
          - ruby-version: "3.0"
            specific_bundler_version: "2.5.10"

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_DB: pg_hash_func_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd "pg_isready --host=localhost --port=5432 --dbname=pg_hash_func_test --username=postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler: ${{ matrix.specific_bundler_version || 'Gemfile.lock' }}
          cache-version: 1

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Run RuboCop
        run: bundle exec rubocop

      - name: Run RSpec
        env:
          PGHOST: localhost
          PGPORT: 5432 # Port specified in services
          PGDATABASE: pg_hash_func_test # DB name specified in services env
          PGUSER: postgres # User specified in services env
          PGPASSWORD: password # Password specified in services env
          RAILS_ENV: test
          RACK_ENV: test
        run: bundle exec rspec
